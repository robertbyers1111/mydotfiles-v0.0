
#-------------------------------------------------------------------------------
# FILE: .promptrc |
#-----------------+
#
# This file sets up shell command prompt properties. Sourced by .bashrc
#
#
#
#
#
#             TO DO
#
#             Remove external tools (e.g., `pwd` and `sed`). Use variable manipulation tools instead.
#
#
#
#

#-------------------------------------------------------------------------------
# This will update current window's title

windowTitleUpdate()
{
  echo -ne "\033]0;`pwd | sed 's@.*/\([^/][^/]*/[^/][^/]*/[^/][^/]*\)@\1@'`\007"
}

#-------------------------------------------------------------------------------
# This will set PROMPTCOLORCLASS if it has not already been set. It is used to
# customize the prompt background color based on hostname (or anything really)

setPROMPTCOLORCLASS()
{
    # First try to use value in HOSTORVENV

    [ _$PROMPTCOLORCLASS = _ ] && {
        case _${HOSTORVENV} in
            _RmbInspiro2018) export PROMPTCOLORCLASS=RmbInspiro2018 ;;
            _IRBT-8758l)     export PROMPTCOLORCLASS=IRBT-8758l ;;
            _irobert)        export PROMPTCOLORCLASS=irobert ;;
            *)               A=42 ;; ### (no-op)
        esac
    }

    # If PROMPTCOLORCLASS is still empty (i.e., HOSTORVENV is not set or was unrecognized) this
    # section will use /bin/hostname.

    [ _$PROMPTCOLORCLASS = _ ] && {
        case _`hostname` in
            _RmbInspiro2018) export PROMPTCOLORCLASS=RmbInspiro2018 ;;
            _IRBT-8758l)     export PROMPTCOLORCLASS=IRBT-8758l ;;
            _irobert)        export PROMPTCOLORCLASS=irobert ;;
            *)               export PROMPTCOLORCLASS=UNKNOWN ;;
        esac
    }
}

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# This will set ENDCHAR based on whether current uid is root or not

setENDCHAR()
{
    [ _$USER = _root ] && ISROOT=1 || {
        [ _$LOGNAME = _root ] && ISROOT=1 || {
            [ _$USERNAME = _root ] && ISROOT=1
        }
    }
    [ _$ISROOT = _1 ] \
      && export ENDCHAR="##" \
      || export ENDCHAR=">"
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# This will set HOSTORVENV to current hostname combined with virtual
# environment. If not in a virtual environment, HOSTORVENV is set to
# current hostname only.

setHOSTORENV()
{
    [ "_${HOSTNAME}" = "_" ] && export HOSTNAME=`hostname`
    [ "_${VIRTUAL_ENV}" != "_" ] && export HOSTORVENV=${HOSTNAME}-`basename ${VIRTUAL_ENV}` || export HOSTORVENV=${HOSTNAME}
}

#-------------------------------------------------------------------------------
# THIS IS NOT WORKING
# Append current working directory to the command that gets entered into the history
# NB: Sometimes bash_profile has settings for HISTTIMEFORMAT that override this (!)

cwdUtilityFuncForHistory()
{
    hpwd=$(history 1)                  # Grab the most recent command

    # The next line works only if HISTTIMEFORMAT=[%Y-%m%d-%H%M%S]

    hpwd="${hpwd# *[0-9]*-[0-9]*] }"   # Strip off the history line number and timestamp (surrounded by []s)

    if [[ ${hpwd%% *} == "cd" ]]       # If it's a cd command, we want the old directory
    then                               # so the comment matches other commands "where *were* you when this was done?"
        cwd=$OLDPWD
    else
        cwd=$PWD
    fi
    history -s "### $cwd"
}


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# This will be set to be the prompt command

prompt_command() {
    
    #-- ESCAPE SEQUENCES
    
    #-- Line editing is totally hosed when using escapes in PS1. Solution: enclose
    #-- start-of-escapes (\e) and end-of-escapes (m) in \[ and \]
    
    DULL=0
    BRIGHT=1
    
    FG_BLACK=30
    FG_RED=31
    FG_GREEN=32
    FG_YELLOW=33
    FG_BLUE=34
    FG_VIOLET=35
    FG_CYAN=36
    FG_WHITE=37
    
    FG_NULL=00
    
    BG_BLACK=40
    BG_RED=41
    BG_GREEN=42
    BG_YELLOW=43
    BG_BLUE=44
    BG_VIOLET=45
    BG_CYAN=46
    BG_WHITE=47
    
    BG_NULL=00
    
    ##
    # ANSI Escape Commands
    ##
    ESC="\033"
    ESC="\e"
    NORMAL="\[$ESC[m\]"
    RESET="\[$ESC[${DULL};${FG_WHITE};${BG_NULL}m\]"
    
    ##
    # Shortcuts for Colored Text ( Bright and FG Only )
    ##
    
    # DULL TEXT
    BLACK="\[$ESC[${DULL};${FG_BLACK}m\]"
    RED="\[$ESC[${DULL};${FG_RED}m\]"
    GREEN="\[$ESC[${DULL};${FG_GREEN}m\]"
    YELLOW="\[$ESC[${DULL};${FG_YELLOW}m\]"
    BLUE="\[$ESC[${DULL};${FG_BLUE}m\]"
    VIOLET="\[$ESC[${DULL};${FG_VIOLET}m\]"
    CYAN="\[$ESC[${DULL};${FG_CYAN}m\]"
    WHITE="\[$ESC[${DULL};${FG_WHITE}m\]"
    
    # BRIGHT TEXT
    BRIGHT_BLACK="\[$ESC[${BRIGHT};${FG_BLACK}m\]"
    BRIGHT_RED="\[$ESC[${BRIGHT};${FG_RED}m\]"
    BRIGHT_GREEN="\[$ESC[${BRIGHT};${FG_GREEN}m\]"
    BRIGHT_YELLOW="\[$ESC[${BRIGHT};${FG_YELLOW}m\]"
    BRIGHT_BLUE="\[$ESC[${BRIGHT};${FG_BLUE}m\]"
    BRIGHT_VIOLET="\[$ESC[${BRIGHT};${FG_VIOLET}m\]"
    BRIGHT_CYAN="\[$ESC[${BRIGHT};${FG_CYAN}m\]"
    BRIGHT_WHITE="\[$ESC[${BRIGHT};${FG_WHITE}m\]"
    BG_BRIGHT_WHITE="\[$ESC[${BRIGHT};${BG_WHITE}m\]"
    
    # REV TEXT as an example
    REV_CYAN="\[$ESC[${DULL};${BG_WHITE};${BG_CYAN}m\]"
    REV_RED="\[$ESC[${DULL};${FG_YELLOW}; ${BG_RED}m\]"
    
    #- This will set ENDCHAR based on whether current uid is root or not

    setENDCHAR

    #- This will set HOSTORVENV, which is a combination of hostname and virtual environment

    setHOSTORENV
    
    #- This will set PROMPTCOLORCLASS, which uses current hostname or HOSTORVENV to determine a color class for the prompt

    setPROMPTCOLORCLASS

    #- Change BG color depending on color class

    [ $PROMPTCOLORCLASS = RmbInspiro2018 ] && PROMPT_COLOR="\[${ESC}[${BRIGHT};${BG_CYAN};${FG_WHITE}m\]"
    [ $PROMPTCOLORCLASS = IRBT-8758l ] && PROMPT_COLOR="\[${ESC}[${BRIGHT};${BG_GREEN};${FG_WHITE}m\]"
    [ $PROMPTCOLORCLASS = irobert ] && PROMPT_COLOR="\[${ESC}[${BRIGHT};${BG_YELLOW};${FG_WHITE}m\]"
    [ $PROMPTCOLORCLASS = ubuntu ] && PROMPT_COLOR="\[${ESC}[${BRIGHT};${BG_GREEN};${FG_WHITE}m\]"
    [ $PROMPTCOLORCLASS = UNKNOWN ] && PROMPT_COLOR="\[${ESC}[${BRIGHT};${BG_CYAN};${FG_WHITE}m\]"

    #- Change window title

    echo -ne "\033]0;`pwd | sed 's@.*/\([^/][^/]*/[^/][^/]*/[^/][^/]*\)@\1@'`\007"

    #- Finally, update the prompt

    WORKINGDIR='$(pwd | sed "s@.*/\([^/][^/]*/[^/][^/]*\)@\1@")'
    TIME="\t"
    export PS1="${PROMPT_COLOR}($HOSTORVENV) $WORKINGDIR $TIME$NORMAL$ENDCHAR "

}

#-------------------------------------------------------------------------------
# * * *  M A I N  * * *

export PROMPT_COMMAND=prompt_command

